name: test-gh
on:
  push:
    branches:
      - develop
  pull_request:
    types: [opened, reopened, synchronize]
jobs:
  test-all:
    name: Test GH
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v1
      with:
        go-version: 1.22.5
    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
      with:
        path: src/github.com/${{ github.repository }}
    - name: Run Tests
      env:
        VENDIR_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        set -e -x
        export GOPATH=$(echo `pwd`/../../../../)

        # Delete default installed helm
        sudo rm `which helm`

        mkdir -p /tmp/bin
        export PATH=/tmp/bin:$PATH

        # imgpkg
        wget -O- https://github.com/k14s/imgpkg/releases/download/v0.7.0/imgpkg-linux-amd64 > /tmp/bin/imgpkg && \
          echo "bb90881c2c03cad4d50b2f0881d1330d341a37bb55bd8fff50bf228f7cfcf3d2  /tmp/bin/imgpkg" | shasum -c - && \
          chmod +x /tmp/bin/imgpkg

        # helm 2
        wget -O- https://get.helm.sh/helm-v2.17.0-linux-amd64.tar.gz > /tmp/helm2.tgz && \
          echo "f3bec3c7c55f6a9eb9e6586b8c503f370af92fe987fcbf741f37707606d70296  /tmp/helm2.tgz" | shasum -c - && \
          mkdir /tmp/helm2-unpacked && tar -C /tmp/helm2-unpacked -xzvf /tmp/helm2.tgz && \
          mv /tmp/helm2-unpacked/linux-amd64/helm /tmp/bin/helm2

        # helm 3
        wget -O- https://get.helm.sh/helm-v3.8.0-linux-amd64.tar.gz > /tmp/helm3.tgz && \
          echo "8408c91e846c5b9ba15eb6b1a5a79fc22dd4d33ac6ea63388e5698d1b2320c8b  /tmp/helm3.tgz" | shasum -c - && \
          mkdir /tmp/helm3-unpacked && tar -C /tmp/helm3-unpacked -xzvf /tmp/helm3.tgz && \
          mv /tmp/helm3-unpacked/linux-amd64/helm /tmp/bin/helm3

        export VENDIR_E2E_HELM2_BINARY=helm2
        export VENDIR_E2E_HELM3_BINARY=helm3

        ./hack/build.sh
        ./hack/test-all.sh
        ./hack/build-binaries.sh
